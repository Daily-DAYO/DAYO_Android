plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def NATIVE_APP_KEY = properties.getProperty('NATIVE_APP_KEY')

kapt {
    correctErrorTypes true
}

kotlin {
    jvmToolchain(17)
}

android {
    namespace 'daily.dayo.presentation'
    compileSdk 35

    defaultConfig {
        minSdk 26
        versionCode 10000
        versionName "1.0.0"

        buildConfigField("String", "NATIVE_APP_KEY", properties['NATIVE_APP_KEY_STR'])
        manifestPlaceholders = [NATIVE_APP_KEY: NATIVE_APP_KEY]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        // AGP 9.0부터 buildConfig가 사라짐에 따라 8.0에서의 임시방편
        buildConfig = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions = ["environment"]
    productFlavors {
        dev {
            dimension "environment"
            buildConfigField("String", "BASE_URL", properties['BASE_URL_DEV'])
        }
        prod {
            dimension "environment"
            buildConfigField("String", "BASE_URL", properties['BASE_URL_PROD'])
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    composeOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
        kotlinCompilerExtensionVersion = "$compose_version"
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        dataBinding true
        viewBinding true
        compose true
    }
}

dependencies {
    // multiModule
    implementation project(':domain')

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Compose
    Dependency composeBom = platform('androidx.compose:compose-bom:2025.05.00')
    implementation composeBom
    testImplementation composeBom
    androidTestImplementation composeBom
    implementation "androidx.compose.material:material:1.5.4"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    def nav_version = "2.8.3"
    def lifecycle_version = "2.6.1"
    def splashscreen_version = "1.0.0"
    def lottie_version = "6.1.0"
    def glide_version = "4.15.1"
    def landscapist_glide_version = "2.2.5"
    def fragment_version = "1.6.1"
    def activity_version = "1.7.2"
    def emoji_version = "1.0.0-alpha03"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    // Java language implementation
    implementation("androidx.fragment:fragment:$fragment_version")
    // Kotlin
    implementation("androidx.fragment:fragment-ktx:$fragment_version")
    // Java language implementation
    implementation("androidx.activity:activity:$activity_version")
    // Kotlin
    implementation("androidx.activity:activity-ktx:$activity_version")

    // Jetpack Compose
    // Material
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.material:material-icons-extended")
    // Android Studio Preview support
    implementation("androidx.compose.ui:ui-tooling-preview")
    debugImplementation("androidx.compose.ui:ui-tooling")
    // UI Tests
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    // Optional - Integration with activities
    implementation("androidx.activity:activity-compose:1.10.1")
    // Optional - Integration with LiveData
    implementation("androidx.compose.runtime:runtime-livedata")
    // Optional - Integration with RxJava
    implementation("androidx.compose.runtime:runtime-rxjava2")
    // To use constraintlayout in compose
    implementation("androidx.constraintlayout:constraintlayout-compose:1.1.1")

    // Jetpack Navigation
    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    // Kotlin
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // Google Flexbox-Layout
    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    // Google Material Design
    implementation 'com.google.android.material:material:1.9.0'

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycle utilities for Compose
    implementation("androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version")
    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // retrofit2
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.9.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-scalars', version: '2.9.0'
    // JSON을 직렬화
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    // 직렬화된 JSON을 객체로 역직렬화

    // OKHttp
    implementation "com.squareup.okhttp3:okhttp:4.9.2"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.9.2"
    // Use for HttpLoggingInterceptor
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"

    // Hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-android-compiler:2.44"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.2'

    // Kakao sdk
    implementation "com.kakao.sdk:v2-user:2.9.0"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    kapt "android.arch.lifecycle:compiler:1.1.1"
    // Glide-For-Compose
    implementation "com.github.skydoves:landscapist-glide:$landscapist_glide_version"

    // Coil
    implementation "io.coil-kt:coil-compose:2.5.0"

    // Preference
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.2.3')
    implementation 'com.google.firebase:firebase-messaging-ktx'
    // 버전 올리면 java.lang.NoSuchFieldError: No instance field mDelegate of type Landroid/database/sqlite/SQLiteStatement; in class Landroidx/sqlite/db/framewo 에러 남
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // Splash Screen
    implementation "androidx.core:core-splashscreen:$splashscreen_version"

    // Lottie
    implementation "com.airbnb.android:lottie:$lottie_version"
    implementation "com.airbnb.android:lottie-compose:$lottie_version"
    // Shimmer
    implementation 'com.facebook.shimmer:shimmer:0.5.0'

    // paging
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:3.2.0"

    // emoji
    implementation "androidx.emoji2:emoji2:$emoji_version"
    implementation "androidx.emoji2:emoji2-views:$emoji_version"

    // Google In-App Update
    implementation 'com.google.android.play:app-update-ktx:2.1.0'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.mockito:mockito-core:2.25.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation "com.google.truth:truth:1.1"
    // For Robolectric tests.
    testImplementation("com.google.dagger:hilt-android-testing:2.44")
    // For instrumented tests.
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.44")
    // ...with Kotlin.
    kaptTest("com.google.dagger:hilt-android-compiler:2.44")
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2"

//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
    // Image Cropper
    implementation("com.vanniktech:android-image-cropper:4.6.0")
}